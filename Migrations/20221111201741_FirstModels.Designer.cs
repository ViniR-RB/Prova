// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aspent.Models;

#nullable disable

namespace aspent.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221111201741_FirstModels")]
    partial class FirstModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("aspent.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Atividade")
                        .HasColumnType("text");

                    b.Property<string>("TipoDePessoa")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parceiro");
                });

            modelBuilder.Entity("aspent.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pessoa");
                });

            modelBuilder.Entity("aspent.Models.ReservaHotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NumeroReserva")
                        .HasColumnType("text");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ReservaHotel");
                });

            modelBuilder.Entity("FisicaReservaHotel", b =>
                {
                    b.Property<int>("FisicaId")
                        .HasColumnType("integer");

                    b.Property<int>("ReservaHotelId")
                        .HasColumnType("integer");

                    b.HasKey("FisicaId", "ReservaHotelId");

                    b.HasIndex("ReservaHotelId");

                    b.ToTable("FisicaReservaHotel");
                });

            modelBuilder.Entity("JuridicaParceiro", b =>
                {
                    b.Property<int>("JuridicaId")
                        .HasColumnType("integer");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("integer");

                    b.HasKey("JuridicaId", "ParceiroId");

                    b.HasIndex("ParceiroId");

                    b.ToTable("JuridicaParceiro");
                });

            modelBuilder.Entity("aspent.Models.Fisica", b =>
                {
                    b.HasBaseType("aspent.Models.Pessoa");

                    b.Property<int?>("ParceiroId")
                        .HasColumnType("integer");

                    b.Property<string>("cpf")
                        .HasColumnType("text");

                    b.Property<DateTime?>("nascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("rg")
                        .HasColumnType("text");

                    b.HasIndex("ParceiroId");

                    b.HasDiscriminator().HasValue("Fisica");
                });

            modelBuilder.Entity("aspent.Models.Juridica", b =>
                {
                    b.HasBaseType("aspent.Models.Pessoa");

                    b.Property<string>("CNPJ")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Fundacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Juridica");
                });

            modelBuilder.Entity("FisicaReservaHotel", b =>
                {
                    b.HasOne("aspent.Models.Fisica", null)
                        .WithMany()
                        .HasForeignKey("FisicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspent.Models.ReservaHotel", null)
                        .WithMany()
                        .HasForeignKey("ReservaHotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JuridicaParceiro", b =>
                {
                    b.HasOne("aspent.Models.Juridica", null)
                        .WithMany()
                        .HasForeignKey("JuridicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("aspent.Models.Parceiro", null)
                        .WithMany()
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("aspent.Models.Fisica", b =>
                {
                    b.HasOne("aspent.Models.Parceiro", "Parceiro")
                        .WithMany("Fisica")
                        .HasForeignKey("ParceiroId");

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("aspent.Models.Parceiro", b =>
                {
                    b.Navigation("Fisica");
                });
#pragma warning restore 612, 618
        }
    }
}
